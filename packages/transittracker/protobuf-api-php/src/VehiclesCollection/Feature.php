<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transittracker-api.proto

namespace TransitTracker\ProtobufApi\VehiclesCollection;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>TransitTracker.ProtobufApi.VehiclesCollection.Feature</code>
 */
class Feature extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string type = 1;</code>
     */
    protected $type = '';
    /**
     * Generated from protobuf field <code>.TransitTracker.ProtobufApi.VehiclesCollection.Geometry geometry = 2;</code>
     */
    protected $geometry = null;
    /**
     * Generated from protobuf field <code>.TransitTracker.ProtobufApi.VehiclesCollection.Properties properties = 3;</code>
     */
    protected $properties = null;
    /**
     * Generated from protobuf field <code>uint32 id = 4;</code>
     */
    protected $id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $type
     *     @type \TransitTracker\ProtobufApi\VehiclesCollection\Geometry $geometry
     *     @type \TransitTracker\ProtobufApi\VehiclesCollection\Properties $properties
     *     @type int $id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\TransittrackerApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string type = 1;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>string type = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.TransitTracker.ProtobufApi.VehiclesCollection.Geometry geometry = 2;</code>
     * @return \TransitTracker\ProtobufApi\VehiclesCollection\Geometry|null
     */
    public function getGeometry()
    {
        return $this->geometry;
    }

    public function hasGeometry()
    {
        return isset($this->geometry);
    }

    public function clearGeometry()
    {
        unset($this->geometry);
    }

    /**
     * Generated from protobuf field <code>.TransitTracker.ProtobufApi.VehiclesCollection.Geometry geometry = 2;</code>
     * @param \TransitTracker\ProtobufApi\VehiclesCollection\Geometry $var
     * @return $this
     */
    public function setGeometry($var)
    {
        GPBUtil::checkMessage($var, \TransitTracker\ProtobufApi\VehiclesCollection\Geometry::class);
        $this->geometry = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.TransitTracker.ProtobufApi.VehiclesCollection.Properties properties = 3;</code>
     * @return \TransitTracker\ProtobufApi\VehiclesCollection\Properties|null
     */
    public function getProperties()
    {
        return $this->properties;
    }

    public function hasProperties()
    {
        return isset($this->properties);
    }

    public function clearProperties()
    {
        unset($this->properties);
    }

    /**
     * Generated from protobuf field <code>.TransitTracker.ProtobufApi.VehiclesCollection.Properties properties = 3;</code>
     * @param \TransitTracker\ProtobufApi\VehiclesCollection\Properties $var
     * @return $this
     */
    public function setProperties($var)
    {
        GPBUtil::checkMessage($var, \TransitTracker\ProtobufApi\VehiclesCollection\Properties::class);
        $this->properties = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 id = 4;</code>
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>uint32 id = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Feature::class, \TransitTracker\ProtobufApi\VehiclesCollection_Feature::class);

