<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transittracker-api.proto

namespace TransitTracker\ProtobufApi\VehiclesCollection;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>TransitTracker.ProtobufApi.VehiclesCollection.Position</code>
 */
class Position extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 bearing = 1;</code>
     */
    protected $bearing = 0;
    /**
     * Generated from protobuf field <code>uint32 odometer = 2;</code>
     */
    protected $odometer = 0;
    /**
     * Generated from protobuf field <code>uint32 speed = 3;</code>
     */
    protected $speed = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $bearing
     *     @type int $odometer
     *     @type int $speed
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\TransittrackerApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 bearing = 1;</code>
     * @return int
     */
    public function getBearing()
    {
        return $this->bearing;
    }

    /**
     * Generated from protobuf field <code>uint32 bearing = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setBearing($var)
    {
        GPBUtil::checkUint32($var);
        $this->bearing = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 odometer = 2;</code>
     * @return int
     */
    public function getOdometer()
    {
        return $this->odometer;
    }

    /**
     * Generated from protobuf field <code>uint32 odometer = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setOdometer($var)
    {
        GPBUtil::checkUint32($var);
        $this->odometer = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 speed = 3;</code>
     * @return int
     */
    public function getSpeed()
    {
        return $this->speed;
    }

    /**
     * Generated from protobuf field <code>uint32 speed = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setSpeed($var)
    {
        GPBUtil::checkUint32($var);
        $this->speed = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Position::class, \TransitTracker\ProtobufApi\VehiclesCollection_Position::class);

